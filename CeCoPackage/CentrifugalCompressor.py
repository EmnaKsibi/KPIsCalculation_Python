import CeCoPackage.CecoKPIsFunctions as fn

class CentrifugalCompressor:
     
    def __init__(self,nbStage,  **kwargs):
        self.kwargs=kwargs
        self.nbStage=int(nbStage)
        for key, value in kwargs.items():
            if key != 'Timestamp' : setattr(self, key, fn.num(value))

    def getattr(self, name):
        return getattr(self, name)

#NonStageVar
    def MechEff(self):  return getattr(self,'MechEff') 
    def PerfLoLoPcnt(self):  return getattr(self,'PerfLoLoPcnt') 
    def PerfLoPcnt(self):  return getattr(self,'PerfLoPcnt') 
    def PerfHiPcnt(self):  return getattr(self,'PerfHiPcnt') 
    def PerfHiHiPcnt(self):  return getattr(self,'PerfHiHiPcnt') 
    def WarningLimit(self):  return getattr(self,'WarningLimit') 
    def InputLimit(self):  return getattr(self,'InputLimit') 
    def AlertLimit(self):  return getattr(self,'AlertLimit') 
    def PowerCost(self):  return getattr(self,'PowerCost') 
    def Speed(self): return getattr(self,'Speed')  
    def VanePosTarget(self): return getattr(self,'VanePosTarget') 
    def VanePosActual(self): return getattr(self,'VanePosActual') 

#IsStageVar 
    def SuctionPressure(self,stage): return getattr(self,'SuctionPressure%s'% stage) 
    def SuctionTemperature(self,stage): return getattr(self,'SuctionTemperature%s'% stage) 
    def DiscPressure(self,stage): return getattr(self,'DiscPressure%s'% stage) 
    def DiscTemperature(self,stage): return getattr(self,'DiscTemperature%s'% stage) 
    def VolFlow(self,stage): return getattr(self,'VolFlow%s'% stage) 
    def GasSpeedOfSound(self,stage): return getattr(self,'GasSpeedOfSound%s'% stage) 
    def SpecificHeatRatio(self,stage): return getattr(self,'SpecificHeatRatio%s'% stage) 
    def GasCompressibility(self,stage): return getattr(self,'GasCompressibility%s'% stage) 
    def GasMoleWeight(self,stage): return getattr(self,'GasMoleWeight%s'% stage) 
    def GasDensity(self,stage): return getattr(self,'GasDensity%s'% stage) 
    def SbvPosActual(self,stage): return getattr(self,'SbvPosActual%s'% stage) 
    def SbvPosTarget(self,stage): return getattr(self,'SbvPosTarget%s'% stage) 
    def SdPFilterMultistate(self,stage): return getattr(self,'SdPFilterMultistate%s'% stage)  
    def RotorDiameter(self,stage):  return getattr(self,'RotorDiameter%s'% stage) 
    def NoRotors(self,stage):  return getattr(self,'NoRotors%s'% stage) 
    def SuctionDiameter(self,stage):  return getattr(self,'SuctionDiameter%s'% stage) 
    def DiscDiameter(self,stage):  return getattr(self,'DiscDiameter%s'% stage) 
    def RefCapacity(self,stage):  return getattr(self,'RefCapacity%s'% stage) 
    def RefHead(self,stage):  return getattr(self,'RefHead%s'% stage) 
    def RefPower(self,stage):  return getattr(self,'RefPower%s'% stage) 
    def RefSpeed(self,stage):  return getattr(self,'RefSpeed%s'% stage) 
    def RefDensity(self,stage):  return getattr(self,'RefDensity%s'% stage)  
    def GammaGain(self,stage):  return getattr(self,'GammaGain%s'% stage) 
     

#IsStageVar Curves Related
    def SpeedHeadCurve1(self,stage): return getattr(self,'Speed_HeadCurve1_St%s'% stage) 
    def SpeedHeadCurve2(self,stage): return getattr(self,'Speed_HeadCurve2_St%s'% stage) 
    def SpeedHeadCurve3(self,stage): return getattr(self,'Speed_HeadCurve3_St%s'% stage) 
    def SpeedHeadCurve4(self,stage): return getattr(self,'Speed_HeadCurve4_St%s'% stage) 
    def SpeedHeadCurve5(self,stage): return getattr(self,'Speed_HeadCurve5_St%s'% stage)  
    def x0HeadCurve1(self,stage):  return getattr(self,'x0_HeadCurve1_St%s'% stage)
    def x1HeadCurve1(self,stage):  return getattr(self,'x1_HeadCurve1_St%s'% stage)
    def x2HeadCurve1(self,stage):  return getattr(self,'x2_HeadCurve1_St%s'% stage)
    def x3HeadCurve1(self,stage):  return getattr(self,'x3_HeadCurve1_St%s'% stage)
    def x4HeadCurve1(self,stage):  return getattr(self,'x4_HeadCurve1_St%s'% stage)
    def x5HeadCurve1(self,stage):  return getattr(self,'x5_HeadCurve1_St%s'% stage)
    def x0HeadCurve2(self,stage):  return getattr(self,'x0_HeadCurve2_St%s'% stage)
    def x1HeadCurve2(self,stage):  return getattr(self,'x1_HeadCurve2_St%s'% stage)
    def x2HeadCurve2(self,stage):  return getattr(self,'x2_HeadCurve2_St%s'% stage)
    def x3HeadCurve2(self,stage):  return getattr(self,'x3_HeadCurve2_St%s'% stage)
    def x4HeadCurve2(self,stage):  return getattr(self,'x4_HeadCurve2_St%s'% stage)
    def x5HeadCurve2(self,stage):  return getattr(self,'x5_HeadCurve2_St%s'% stage)
    def x0HeadCurve3(self,stage):  return getattr(self,'x0_HeadCurve3_St%s'% stage)
    def x1HeadCurve3(self,stage):  return getattr(self,'x1_HeadCurve3_St%s'% stage)
    def x2HeadCurve3(self,stage):  return getattr(self,'x2_HeadCurve3_St%s'% stage)
    def x3HeadCurve3(self,stage):  return getattr(self,'x3_HeadCurve3_St%s'% stage)
    def x4HeadCurve3(self,stage):  return getattr(self,'x4_HeadCurve3_St%s'% stage)
    def x5HeadCurve3(self,stage):  return getattr(self,'x5_HeadCurve3_St%s'% stage)
    def x0HeadCurve4(self,stage):  return getattr(self,'x0_HeadCurve4_St%s'% stage)
    def x1HeadCurve4(self,stage):  return getattr(self,'x1_HeadCurve4_St%s'% stage)
    def x2HeadCurve4(self,stage):  return getattr(self,'x2_HeadCurve4_St%s'% stage)
    def x3HeadCurve4(self,stage):  return getattr(self,'x3_HeadCurve4_St%s'% stage)
    def x4HeadCurve4(self,stage):  return getattr(self,'x4_HeadCurve4_St%s'% stage)
    def x5HeadCurve4(self,stage):  return getattr(self,'x5_HeadCurve4_St%s'% stage)
    def x0HeadCurve5(self,stage):  return getattr(self,'x0_HeadCurve5_St%s'% stage)
    def x1HeadCurve5(self,stage):  return getattr(self,'x1_HeadCurve5_St%s'% stage)
    def x2HeadCurve5(self,stage):  return getattr(self,'x2_HeadCurve5_St%s'% stage)
    def x3HeadCurve5(self,stage):  return getattr(self,'x3_HeadCurve5_St%s'% stage)
    def x4HeadCurve5(self,stage):  return getattr(self,'x4_HeadCurve5_St%s'% stage)
    def x5HeadCurve5(self,stage):  return getattr(self,'x5_HeadCurve5_St%s'% stage)
    def SpeedEffCurve1(self,stage): return getattr(self,'Speed_EffCurve1_St%s'% stage) 
    def SpeedEffCurve2(self,stage): return getattr(self,'Speed_EffCurve2_St%s'% stage) 
    def SpeedEffCurve3(self,stage): return getattr(self,'Speed_EffCurve3_St%s'% stage) 
    def SpeedEffCurve4(self,stage): return getattr(self,'Speed_EffCurve4_St%s'% stage) 
    def SpeedEffCurve5(self,stage): return getattr(self,'Speed_EffCurve5_St%s'% stage) 
    def x0EffCurve1(self,stage):  return getattr(self,'x0_EffCurve1_St%s'% stage)
    def x1EffCurve1(self,stage):  return getattr(self,'x1_EffCurve1_St%s'% stage)
    def x2EffCurve1(self,stage):  return getattr(self,'x2_EffCurve1_St%s'% stage)
    def x3EffCurve1(self,stage):  return getattr(self,'x3_EffCurve1_St%s'% stage)
    def x4EffCurve1(self,stage):  return getattr(self,'x4_EffCurve1_St%s'% stage)
    def x5EffCurve1(self,stage):  return getattr(self,'x5_EffCurve1_St%s'% stage)
    def x0EffCurve2(self,stage):  return getattr(self,'x0_EffCurve2_St%s'% stage)
    def x1EffCurve2(self,stage):  return getattr(self,'x1_EffCurve2_St%s'% stage)
    def x2EffCurve2(self,stage):  return getattr(self,'x2_EffCurve2_St%s'% stage)
    def x3EffCurve2(self,stage):  return getattr(self,'x3_EffCurve2_St%s'% stage)
    def x4EffCurve2(self,stage):  return getattr(self,'x4_EffCurve2_St%s'% stage)
    def x5EffCurve2(self,stage):  return getattr(self,'x5_EffCurve2_St%s'% stage)
    def x0EffCurve3(self,stage):  return getattr(self,'x0_EffCurve3_St%s'% stage)
    def x1EffCurve3(self,stage):  return getattr(self,'x1_EffCurve3_St%s'% stage)
    def x2EffCurve3(self,stage):  return getattr(self,'x2_EffCurve3_St%s'% stage)
    def x3EffCurve3(self,stage):  return getattr(self,'x3_EffCurve3_St%s'% stage)
    def x4EffCurve3(self,stage):  return getattr(self,'x4_EffCurve3_St%s'% stage)
    def x5EffCurve3(self,stage):  return getattr(self,'x5_EffCurve3_St%s'% stage)
    def x0EffCurve4(self,stage):  return getattr(self,'x0_EffCurve4_St%s'% stage)
    def x1EffCurve4(self,stage):  return getattr(self,'x1_EffCurve4_St%s'% stage)
    def x2EffCurve4(self,stage):  return getattr(self,'x2_EffCurve4_St%s'% stage)
    def x3EffCurve4(self,stage):  return getattr(self,'x3_EffCurve4_St%s'% stage)
    def x4EffCurve4(self,stage):  return getattr(self,'x4_EffCurve4_St%s'% stage)
    def x5EffCurve4(self,stage):  return getattr(self,'x5_EffCurve4_St%s'% stage)
    def x0EffCurve5(self,stage):  return getattr(self,'x0_EffCurve5_St%s'% stage)
    def x1EffCurve5(self,stage):  return getattr(self,'x1_EffCurve5_St%s'% stage)
    def x2EffCurve5(self,stage):  return getattr(self,'x2_EffCurve5_St%s'% stage)
    def x3EffCurve5(self,stage):  return getattr(self,'x3_EffCurve5_St%s'% stage)
    def x4EffCurve5(self,stage):  return getattr(self,'x4_EffCurve5_St%s'% stage)
    def x5EffCurve5(self,stage):  return getattr(self,'x5_EffCurve5_St%s'% stage)

#IsStageKPIS
    def DesignMassFlow(self,stage) : return fn.DesignMassFlow(self.DesignGasPower(stage),self.MassFlow(stage),self.GasPower(stage))
    def ActualVolFlow(self,stage) : return fn.ActualVolFlow(self.GasDensity(stage),self.VolFlow(stage),self.NormalDensity(stage))
    def NormalVolFlow(self,stage) : return fn.NormalVolFlow(self.Speed,self.ActualVolFlow(stage))
    def AdiaWorkCoeff(self,stage) : return fn.AdiaWorkCoeff(self.RotorTipSpeed(stage),self.AdiaHeadM(stage))
    def GasPowerRef(self,stage) : return fn.GasPowerRef(self.RefPower(stage),self.SpeedRatio(stage),self.DensityRatio(stage))
    def IsoEfficiency(self,stage) : return fn.IsoEfficiency(self.PolyHead(stage),self.PolyEfficiency(stage),self.IsoHead(stage))
    def MachNumber(self,stage) : return fn.MachNumber(self.GasSpeedOfSound(stage),self.RotorTipSpeed(stage))
    def NormalHead(self,stage) : return fn.NormalHead(self.Speed,self.PolyHead(stage))
    def AdiaEfficiency(self,stage) : return fn.AdiaEfficiency(self.PolyHead(stage),self.AdiaHead(stage),self.PolyEfficiency(stage))
    def GasPower(self,stage) : return fn.GasPower(self.MassFlow(stage),self.PolyHead(stage),self.PolyEfficiency(stage))
    def PolyHead(self,stage) : return fn.PolyHead(self.GasMoleWeight(stage),self.SuctionTemperature(stage),self.GasCompressibility(stage),self.PolyRatio(stage),self.PressRatio(stage))
    def MassFlow(self,stage) : return fn.MassFlow(self.VolFlow(stage),self.NormalDensity(stage))
    def GasPowerDevnPcn(self,stage) : return fn.GasPowerDevnPcn(self.GasPowerDeviation(stage),self.DesignGasPower(stage))
    def PressRatio(self,stage) : return fn.PressRatio(self.SuctionPressure(stage),self.DiscPressure(stage))
    def SbvPosDeviation(self,stage) : return fn.SbvPosDeviation(self.SbvPosTarget(stage),self.SbvPosActual(stage))
    def PluggedSuctFilterDetection(self,stage) : return fn.PluggedSuctFilterDetection(self.SdPFilterMultistate(stage))
    def SuctVelocity(self,stage) : return fn.SuctVelocity(self.AreaInlet(stage),self.ActualVolFlow(stage))
    def TempRatio(self,stage) : return fn.TempRatio(self.SuctionTemperature(stage),self.DiscTemperature(stage))
    def DTemp(self,stage) : return fn.DTemp(self.DiscTemperature(stage),self.SuctionTemperature(stage))
    def VolFlowRef(self,stage) : return fn.VolFlowRef(self.RefCapacity(stage),self.SpeedRatio(stage),self.DensityRatio(stage))
    def PolyWorkCoeff(self,stage) : return fn.PolyWorkCoeff(self.RotorTipSpeed(stage),self.PolyHeadM(stage))
    def PolyWorkCoeffRotor(self,stage) : return fn.PolyWorkCoeffRotor(self.NoRotors(stage),self.PolyWorkCoeff(stage))
    def PolyWorkInput(self,stage) : return fn.PolyWorkInput(self.PolyEfficiency(stage),self.PolyWorkCoeffRotor(stage))
    def MassFlowDeviation(self,stage) : return fn.MassFlowDeviation(self.MassFlow(stage),self.DesignMassFlow(stage))
    def MassFlowDevnPcn(self,stage) : return fn.MassFlowDevnPcn(self.DesignMassFlow(stage),self.MassFlowDeviation(stage))
    def GasPowerDeviation(self,stage) : return fn.GasPowerDeviation(self.GasPower(stage),self.DesignGasPower(stage))
    def NormalPower(self,stage) : return fn.NormalPower(self.Speed,self.GasPower(stage))
    def SpecificPower(self,stage) : return fn.SpecificPower(self.MassFlow(stage),self.GasPower(stage))
    def DesignSpecificPower(self,stage) : return fn.DesignSpecificPower(self.MassFlow(stage),self.DesignGasPower(stage))
    def PolyHeadDeviation(self,stage) : return fn.PolyHeadDeviation(self.PolyHead(stage),self.DesignPolyHead(stage))
    def PolyHeadDevnPcn(self,stage) : return fn.PolyHeadDevnPcn(self.DesignPolyHead(stage),self.PolyHeadDeviation(stage))
    def PolyHeadM(self,stage) : return fn.PolyHeadM(self.PolyHead(stage))
    def NormalDensity(self,stage) : return fn.NormalDensity(self.GasMoleWeight(stage))
    def DesignPolyHeadM(self,stage) : return fn.DesignPolyHeadM(self.DesignPolyHead(stage))
    def PolyHeadMDeviation(self,stage) : return fn.PolyHeadMDeviation(self.PolyHeadM(stage),self.DesignPolyHeadM(stage))
    def PolyHeadMDevnPcn(self,stage) : return fn.PolyHeadMDevnPcn(self.DesignPolyHeadM(stage),self.PolyHeadMDeviation(stage))
    def AdiaHead(self,stage) : return fn.AdiaHead(self.GasMoleWeight(stage),self.SuctionTemperature(stage),self.GasCompressibility(stage),self.AdiaRatio(stage),self.PressRatio(stage))
    def AdiaHeadM(self,stage) : return fn.AdiaHeadM(self.AdiaHead(stage))
    def GasGamma(self,stage) : return fn.GasGamma(self.SpecificHeatRatio(stage),self.GammaGain(stage))
    def IsoHead(self,stage) : return fn.IsoHead(self.GasMoleWeight(stage),self.SuctionTemperature(stage),self.GasCompressibility(stage),self.PressRatio(stage))
    def IsoHeadM(self,stage) : return fn.IsoHeadM(self.IsoHead(stage))
    def NormalHeadM(self,stage) : return fn.NormalHeadM(self.Speed,self.PolyHeadM(stage))
    def PolyHeadRef(self,stage) : return fn.PolyHeadRef(self.RefHead(stage),self.SpeedRatio(stage),self.DensityRatio(stage))
    def PolyHeadRefM(self,stage) : return fn.PolyHeadRefM(self.PolyHeadRef(stage))
    def PressRise(self,stage) : return fn.PressRise(self.DiscPressure(stage),self.SuctionPressure(stage))
    def AreaExit(self,stage) : return fn.AreaExit(self.DiscDiameter(stage))
    def AreaInlet(self,stage) : return fn.AreaInlet(self.SuctionDiameter(stage))
    def DensityRatio(self,stage) : return fn.DensityRatio(self.GasDensity(stage),self.RefDensity(stage))
    def SpeedRatio(self,stage) : return fn.SpeedRatio(self.Speed,self.RefSpeed(stage))
    def RotorTipSpeed(self,stage) : return fn.RotorTipSpeed(self.RotorDiameter(stage),self.Speed)
    def PolyRatio(self,stage) : return fn.PolyRatio(self.PressRatio(stage),self.TempRatio(stage))
    def DesignGasPower(self,stage) : return fn.DesignGasPower(self.DesignPolyEfficiency(stage),self.MassFlow(stage),self.PolyHead(stage))
    def AdiaRatio(self,stage) : return fn.AdiaRatio(self.GasGamma(stage))
    def PolyEfficiency(self,stage) : return fn.PolyEfficiency(self.PolyRatio(stage),self.AdiaRatio(stage))
    def PolyEfficiencyDeviation(self,stage) : return fn.PolyEfficiencyDeviation(self.PolyEfficiency(stage),self.DesignPolyEfficiency(stage))
    def PolyEfficiencyDevnPcn(self,stage) : return fn.PolyEfficiencyDevnPcn(self.PolyEfficiencyDeviation(stage),self.DesignPolyEfficiency(stage))
    def DesignPolyEfficiency(self,stage) : return fn.DesignPolyEfficiency(self.Speed,self.VolFlow(stage),self.SpeedEffCurve1(stage),self.SpeedEffCurve2(stage),self.SpeedEffCurve3(stage),self.SpeedEffCurve4(stage),self.SpeedEffCurve5(stage),
                                                                                                         self.x0EffCurve1(stage), self.x1EffCurve1(stage), self.x2EffCurve1(stage), self.x3EffCurve1(stage), self.x4EffCurve1(stage), self.x5EffCurve1(stage),
                                                                                                         self.x0EffCurve2(stage), self.x1EffCurve2(stage), self.x2EffCurve2(stage), self.x3EffCurve2(stage), self.x4EffCurve2(stage), self.x5EffCurve2(stage),
                                                                                                         self.x0EffCurve3(stage), self.x1EffCurve3(stage), self.x2EffCurve3(stage), self.x3EffCurve3(stage), self.x4EffCurve3(stage), self.x5EffCurve3(stage),
                                                                                                         self.x0EffCurve4(stage), self.x1EffCurve4(stage), self.x2EffCurve4(stage), self.x3EffCurve4(stage), self.x4EffCurve4(stage), self.x5EffCurve4(stage),
                                                                                                         self.x0EffCurve5(stage), self.x1EffCurve5(stage), self.x2EffCurve5(stage), self.x3EffCurve5(stage), self.x4EffCurve5(stage), self.x5EffCurve5(stage))
    def DesignPolyHead(self,stage) :  return fn.DesignPolyHead(self.Speed, self.VolFlow(stage), self.SpeedHeadCurve1(stage),self.SpeedHeadCurve2(stage),self.SpeedHeadCurve3(stage),self.SpeedHeadCurve4(stage),self.SpeedHeadCurve5(stage),
                                                                                                self.x0HeadCurve1(stage), self.x1HeadCurve1(stage), self.x2HeadCurve1(stage), self.x3HeadCurve1(stage), self.x4HeadCurve1(stage), self.x5HeadCurve1(stage),
                                                                                                self.x0HeadCurve2(stage), self.x1HeadCurve2(stage), self.x2HeadCurve2(stage), self.x3HeadCurve2(stage), self.x4HeadCurve2(stage), self.x5HeadCurve2(stage),
                                                                                                self.x0HeadCurve3(stage), self.x1HeadCurve3(stage), self.x2HeadCurve3(stage), self.x3HeadCurve3(stage), self.x4HeadCurve3(stage), self.x5HeadCurve3(stage),
                                                                                                self.x0HeadCurve4(stage), self.x1HeadCurve4(stage), self.x2HeadCurve4(stage), self.x3HeadCurve4(stage), self.x4HeadCurve4(stage), self.x5HeadCurve4(stage),
                                                                                                self.x0HeadCurve5(stage), self.x1HeadCurve5(stage), self.x2HeadCurve5(stage), self.x3HeadCurve5(stage), self.x4HeadCurve5(stage), self.x5HeadCurve5(stage))
   
#NonStageKPIS

    def VanePosDev(self) : return fn.VanePosDev(self.VanePosActual,self.VanePosTarget)
    def TotalAdiaHead(self) : return fn.TotalAdiaHead([self.AdiaHead(stage) for stage in range(1,1+ self.nbStage)])
    def TotalAdiaHeadM(self) : return fn.TotalAdiaHeadM(self.TotalAdiaHead())
    def TotalIdealPowerAdia(self) : return fn.TotalIdealPowerAdia([self.MassFlow(stage) for stage in range(1,1+ self.nbStage)],[self.AdiaHead(stage) for stage in range(1,1+ self.nbStage)])
    def TotalIdealPowerPoly(self) : return fn.TotalIdealPowerPoly([self.MassFlow(stage) for stage in range(1,1+ self.nbStage)],[self.PolyHead(stage) for stage in range(1,1+ self.nbStage)])
    def TotalDesignGasPower(self) : return fn.TotalDesignGasPower([self.DesignGasPower(stage) for stage in range(1,1+ self.nbStage)])
    def TotalGasPower(self) : return fn.TotalGasPower([self.GasPower(stage) for stage in range(1,1+ self.nbStage)])
    def TotalGasPowerDeviaton(self) : return fn.TotalGasPowerDeviaton(self.TotalDesignGasPower(),self.TotalGasPower())
    def TotalGasPowerDevnPcn(self) : return fn.TotalGasPowerDevnPcn(self.TotalDesignGasPower(),self.TotalGasPowerDeviaton())
    def TotalPolyHead(self) : return fn.TotalPolyHead([self.PolyHead(stage) for stage in range(1,1+ self.nbStage)])
    def TotalDesignPolyHead(self) : return fn.TotalDesignPolyHead([self.DesignPolyHead(stage) for stage in range(1,1+ self.nbStage)])
    def TotalDesignPolyHeadM(self) : return fn.TotalDesignPolyHeadM(self.TotalDesignPolyHead())
    def TotalMassFlow(self) : return fn.TotalMassFlow([self.MassFlow(stage) for stage in range(1,1+ self.nbStage)])
    def TotalSpecificPower(self) : return fn.TotalSpecificPower(self.TotalMassFlow(),self.TotalPower())
    def TotalPressRatio(self) : return fn.TotalPressRatio(self.DiscPressure(self.nbStage),self.SuctionPressure(1))
    def TotalPolyEfficiency(self) : return fn.TotalPolyEfficiency(self.TotalIdealPowerPoly(),self.TotalGasPower())
    def TotalDesignPolyEfficiency(self) : return fn.TotalDesignPolyEfficiency(self.TotalIdealPowerPoly(),self.TotalDesignGasPower())
    def TotalPolyEfficiencyDeviation(self) : return fn.TotalPolyEfficiencyDeviation(self.TotalPolyEfficiency(),self.TotalDesignPolyEfficiency())
    def TotalPolyEfficiencyDevnPcn(self) : return fn.TotalPolyEfficiencyDevnPcn(self.TotalPolyEfficiencyDeviation(),self.TotalDesignPolyEfficiency())
    def TotalPower(self) : return fn.TotalPower(self.TotalGasPower(),self.MechEff)
    def TotalPolyHeadM(self) : return fn.TotalPolyHeadM(self.TotalPolyHead())
    def TotalGasPowerDeviation(self) : return fn.TotalGasPowerDeviation(self.TotalGasPower(),self.TotalDesignGasPower())
    def TotalPolyHeadMDeviation(self) : return fn.TotalPolyHeadMDeviation(self.TotalPolyHeadDeviation())
    def TotalPolyHeadMDevnPcn(self) : return fn.TotalPolyHeadMDevnPcn(self.TotalPolyHeadDevnPcn())
    def TotalPolyHeadDeviation(self) : return fn.TotalPolyHeadDeviation(self.TotalDesignPolyHead(),self.TotalPolyHead())
    def TotalPolyHeadDevnPcn(self) : return fn.TotalPolyHeadDevnPcn(self.TotalPolyHeadDeviation(),self.TotalDesignPolyHead())
    def TotalPressRise(self) : return fn.TotalPressRise([self.PressRise(stage) for stage in range(1,1+ self.nbStage)])
    def DegradationCost(self) : return fn.DegradationCost(self.TotalGasPowerDeviation(),self.PowerCost)
    def TotalAdiaEfficiency(self) : return fn.TotalAdiaEfficiency(self.TotalIdealPowerAdia(),self.TotalGasPower())
    def TotalDesignAdiaEfficiency(self) : return fn.TotalAdiaEfficiencyDesign(self.TotalIdealPowerAdia(),self.TotalDesignGasPower())